.PHONY: help check lint install-risc0-toolchain install-sp1-toolchain clean clean-db build-docker-mock-da run-docker-mock-da start-obs stop-obs start-celestia stop-celestia

# Should remain at the top, otherwise `make` won't print help
help: ## Display this help message
	@awk 'BEGIN {FS = ":.*?## "} /^[a-zA-Z_-]+:.*?## / {printf "\033[36m%-30s\033[0m %s\n", $$1, $$2}' $(MAKEFILE_LIST)

check: ## Run cargo check here and in for all ZKVM Provers. Useful for updating Cargo.lock
	SKIP_GUEST_BUILD=1 cargo check
	SKIP_GUEST_BUILD=1 cargo check --manifest-path crates/provers/risc0/guest-celestia/Cargo.toml
	SKIP_GUEST_BUILD=1 cargo check --manifest-path crates/provers/risc0/guest-mock/Cargo.toml
	SKIP_GUEST_BUILD=1 cargo check --manifest-path crates/provers/sp1/guest-celestia/Cargo.toml
	SKIP_GUEST_BUILD=1 cargo check --manifest-path crates/provers/sp1/guest-mock/Cargo.toml

lint: ## Run fmt, check and clippy with the most important feature combinations
	SKIP_GUEST_BUILD=1 cargo fmt --all -- --check
	SKIP_GUEST_BUILD=1 cargo check
	SKIP_GUEST_BUILD=1 cargo check --features celestia_da --features risc0 --no-default-features
	SKIP_GUEST_BUILD=1 cargo check --features celestia_da --features sp1 --no-default-features
	SKIP_GUEST_BUILD=1 cargo check --features celestia_da --features mock_zkvm --no-default-features
	SKIP_GUEST_BUILD=1 cargo clippy
	SKIP_GUEST_BUILD=1 cargo clippy --features celestia_da --features risc0 --no-default-features
	SKIP_GUEST_BUILD=1 cargo clippy --features celestia_da --features sp1 --no-default-features
	SKIP_GUEST_BUILD=1 cargo clippy --features celestia_da --features mock_zkvm --no-default-features
	zepter  # Run it several times, as fix from the first run can uncover other issues
	zepter
	zepter

install-risc0-toolchain: ## Install correct version of RISC0 toolchain
	curl -L https://risczero.com/install | bash
	~/.risc0/bin/rzup install cargo-risczero 2.0.2
	~/.risc0/bin/rzup install rust 1.88.0
	~/.risc0/bin/rzup install cpp 2024.1.5
	@echo "Risc0 toolchain version:"
	cargo +risc0 --version


install-sp1-toolchain: ## Install correct version of SP1 toolchain
	curl -L https://raw.githubusercontent.com/succinctlabs/sp1/main/sp1up/install | bash
	~/.sp1/bin/sp1up $${GITHUB_TOKEN:+--token "$$GITHUB_TOKEN"} --version 5.0.8 --c-toolchain
	~/.sp1/bin/cargo-prove prove --version
	~/.sp1/bin/cargo-prove prove install-toolchain
	@echo "SP1 toolchain version:"
	rustc +succinct --version

clean: clean-db
clean: ## Clean all builds and artifacts and databases
	@cargo clean
	@cargo clean --manifest-path crates/provers/risc0/guest-celestia/Cargo.toml
	@cargo clean --manifest-path crates/provers/risc0/guest-mock/Cargo.toml
	@cargo clean --manifest-path crates/provers/sp1/guest-celestia/Cargo.toml
	@cargo clean --manifest-path crates/provers/sp1/guest-mock/Cargo.toml
	rm -rf examples/starter-js/node_modules
	rm -rf examples/privy/node_modules
	rm -f crates/stf/runtime_call.json
	rm -f crates/stf/autogenerated.inc.rs
	rm -f examples/starter-js/src/types.ts
	$(MAKE) -C integrations clean

clean-db: ## Clean all databases
	rm -rf test-data/rollup-starter-data
	rm -rf test-data/rollup-starter-data-celestia
	rm -rf test-data/mock_da.sqlite

# Add `--build-arg BUILD_MODE=release` for release builds
build-docker-mock-da: ## Build docker container for the rollup with MockDa
	DOCKER_BUILDKIT=1 \
	docker build \
	--ssh default \
	-f ./integrations/rollup/Dockerfile.mock \
	-t rollup-starter:debug \
	.

run-docker-mock-da: ## Start docker container with MockDa
	mkdir -p docker/rollup/data
	mkdir -p docker/rollup/data/da
	mkdir -p docker/rollup/data/state
	docker run --rm -it \
			-v $(CURDIR)/docker/rollup/data/da:/mnt/da \
			-v $(CURDIR)/docker/rollup/data/state:/mnt/state \
			-v $(CURDIR)/configs/mock/rollup-dockerized.toml:/app/config/rollup.toml \
			-p 12346:12346 \
			rollup-starter:debug

start-obs:  ## Start observability stack
	./scripts/start_observability.sh

stop-obs:  ## Stop observability stack
	./scripts/stop_observability.sh

start-celestia: ## Start Celestia docker compose
	$(MAKE) -C integrations start-celestia

stop-celestia: ## Stop Celestia docker compose
	$(MAKE) -C integrations stop-celestia